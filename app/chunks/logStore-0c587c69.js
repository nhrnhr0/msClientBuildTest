import{a7 as n,C as c}from"./vendor-5a13d348.js";import{b as d}from"./api-b34ecd03.js";let l={};l=JSON.parse(localStorage.getItem("cart")),l||(l={});const u=(()=>{const{subscribe:e,set:o,update:i}=c(l);return{subscribe:e,removeFromCart:function(t){let s=n(this);delete s[t.id],o(s)},addToCart:function(t){const s=n(this);let g=!1;if(t&&t.id)return s[t.id]?g=!0:(s[t.id]=t,o(s)),g},isInCart:function(t){const s=n(this);return!(!t||!t.id)&&!!s[t.id]},clearCart:function(){o({})}}})();u.subscribe(e=>{window.localStorage.setItem("cart",JSON.stringify(e))});const S=c({});let a=[];a=JSON.parse(localStorage.getItem("log")),a||(a=[]);let r=c(a);r.subscribe(e=>{window.localStorage.setItem("log",JSON.stringify(e))}),r.addLog=e=>{e.timestemp=new Date,r.update(o=>(o.push(e),o))},console.log("logStore.js creating interval loop! SHOULD CALLED ONLY once"),setInterval(()=>{(function(){let e=n(r);e.length>0&&(console.log("logStore.js sending logs to server!",e),d(e).then(o=>{console.log("logStore.js response from server",o),r.update(i=>(i.splice(0,o.rows.length),i))}).catch(o=>{console.log("logStore.js error",o)}))})()},25e3);export{S as a,u as c,r as l};
